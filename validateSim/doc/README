The idea is of this processor is to produce a basic set of
plots to validate (or find problems) in a simulation model.

Example distributions are of hit energies and time, position, and cell indices.

The /test/ directory has a few scripts which help produce a simple simulation file, produce validation plots from it.

A simple simulation sample suitable for validation can be made as follows:
ddsim --steeringFile ./my_ddsim_steer.py --gun.isotrop True --gun.particle mu- --gun.energy 10*GeV --numberOfEvents 1000 --outputFile muons.slcio

The autoValidate.sh script can be run on this sample.

It runs two jobs, the first is a simple validationPreProcessor, which checks which hit collections are in the events,
and checks the ranges of various parameters (e.g. hit positions, energies, cell indices), and writes them to an ascii file.
You can choose whether to run over collections of simulated or reconstructed hits, or both, 
using the simhitCollections and recohitCollections processor parameters of the validationPreProcessor.

The second Marlin job (with the validateAutoProcessor) then reads this ascii file, uses the information within it
to define suitable histograms, and then goes on to fill the histograms and save them into an output root file.

The plotauto.C root macro prints the histograms into a .ps file in a logical and hopefully helpful way.


